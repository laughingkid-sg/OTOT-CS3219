# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
    # Triggers the workflow on push or pull request events but only for the "main" branch
    push:
        branches: ["ci-testing"]
    pull_request:
        branches: ["main"]

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

    # This workflow contains a single job called "build"
    build:
        # The type of runner that the job will run on
        runs-on: ubuntu-latest

        # Steps represent a sequence of tasks that will be executed as part of the job
        steps:
            # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
            - uses: actions/checkout@v3
            - name: Use Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 16
                  cache: "npm"
            
            - name: Make envfile
              uses: SpicyPizza/create-envfile@v1.3
              with:
                envkey_DEBUG: false
                envkey_DATABASE_DBHOST: "localhost"
                envkey_DATABASE_USERNAME: "sa"
                envkey_DATABASE_PASSWORD: "1StrongPwd!!"
                envkey_DATABASE_NAME: "DemoData"
                envkey_BASIC_USERNAME: "tester@tester.com"
                envkey_BASIC_PASSWORD: "0O82W84Wx7b"
                directory: backend
                file_name: .env
                fail_on_empty: true

            # Start up sqlserver
            - run: docker run -e "ACCEPT_EULA=Y" -e "MSSQL_SA_PASSWORD=1StrongPwd!!" -e 'MSSQL_PID=Express' --name sqlserver -p 1433:1433 -d mcr.microsoft.com/mssql/server:2019-latest
            - run: docker exec -i sqlserver /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P "1StrongPwd!!" -Q 'CREATE DATABASE DemoData'
            - run: npm ci
              working-directory: backend
            - run: npm run build --if-present
              working-directory: backend
            - run: npm test
              working-directory: backend